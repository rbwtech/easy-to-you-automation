name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          flake8 src/ scripts/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ scripts/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format check with black
        run: |
          black --check src/ scripts/

      - name: Type check with mypy
        run: |
          mypy src/ --ignore-missing-imports

      - name: Test package imports
        run: |
          python -c "import sys; sys.path.insert(0, 'src'); from easytoyou import IonicubeDecoder; print('✅ Package import successful')"

      - name: Test CLI scripts help
        run: |
          python scripts/main.py --help
          python scripts/easy4us.py --help

      - name: Test utility functions
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'src')
          from easytoyou.utils import is_ioncube_file, find_php_files, batch_list
          from easytoyou.exceptions import EasyToYouError, LoginError
          print('✅ All utility functions importable')
          "

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Security scan with bandit
        run: |
          bandit -r src/ -f json -o bandit-report.json || true

      - name: Check dependencies for vulnerabilities
        run: |
          safety check --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  compatibility:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Test different dependency versions
        run: |
          python -m pip install --upgrade pip
          # Test with minimum supported versions
          pip install requests==2.31.0 beautifulsoup4==4.12.0 lxml==4.9.3
          python -c "import sys; sys.path.insert(0, 'src'); from easytoyou import IonicubeDecoder"

          # Test with latest versions
          pip install --upgrade requests beautifulsoup4 lxml
          python -c "import sys; sys.path.insert(0, 'src'); from easytoyou import IonicubeDecoder"
